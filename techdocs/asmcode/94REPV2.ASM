; ****************************************************************
;
; 	ASSEMBLY MODULES RUNTIME LIBRAIRY: 94REPV2.ASM
;
; 		COPYRIGHT 1994 FRANCOIS BLANCHETTE
;
; ****************************************************************

TITLE RUNTIME_LIBRAIRY_94REPV2

INCLUDE C:\MASM61\LISTING\IOSYSTEM.INC
INCLUDE C:\MASM61\LISTING\SSFSM95.INC

PUBLIC VIDEOSWITCH
PUBLIC LOADOLD,LOADNEW
PUBLIC GETAX
PUBLIC OLD_VIDEO_MODE
PUBLIC SENDERRORMESSAGE
PUBLIC STRINGBUFFER
PUBLIC STRINGOVERFLOW
PUBLIC FILEIDCODE
PUBLIC EHANDLERTXT, EHANDLER, ERRORHANDLER
PUBLIC EX_, FX_, GX_ ,HX_ ,IX_,KX_,LX_
PUBLIC QUIT

DATA SEGMENT 'DATA' PUBLIC

		DB "94REPV2 RUNTIME LIBRAIRY "
                DB "(C) 1994 FRANCOIS BLANCHETTE",13,10,0

OLDVIDEOMODE	DB 3
STRINGBUFFER	DB 256 DUP (0)

ALIGN 4

EX_		DD 0
FX_		DD 0
GX_		DD 0
HX_		DD 0
IX_		DD 0
KX_		DD 0
LX_		DD 0
FILEIDCODE	DW 0
ERRORHANDLER 	DW EHANDLER

OLD_VIDEO_MODE	DB 3
EHANDLERTXT	DB "FATAL: FILE ACCESS ERROR HAS OCCURED.",13,10,"$"
STRINGOVERFLOW	DB "FATAL: STRING TOO LONG HAS EXCEDED BUFFER.",13,10,"$"

DATA ENDS

CODE SEGMENT READONLY PUBLIC 'CODE'

.386

; THIS PROCEDURE IS THE DEFAULT I/O ERROR HANDLER, IT CAN BE REPLACE
; WHEN A SOFTER APPROCHE IS REQUIERED.

EHANDLER PROC NEAR

	MOV DX,OFFSET EHANDLERTXT
        JMP SENDERRORMESSAGE

EHANDLER ENDP

VIDEOSWITCH PROC NEAR

                PUSHALL
		MOV AH,0FH
		INT 10H
		MOV DX,DATA
		MOV DS,DX
		MOV SI,OFFSET OLD_VIDEO_MODE
		MOV [SI],AL

		MOV AH,0
		MOV AL,13H
		INT 10H
                POPALL
		RET

VIDEOSWITCH ENDP

GETAX PROC NEAR

		    ;-----------------------------------------
		    ; GETAX
		    ; INPUTS:
		    ; NO INPUTS
		    ; OUTPUS:
		    ; RETURN A CARACTER FROM THE BUFFER
		    ;-----------------------------------------

		    PUSH BX
		    PUSH DX
		    PUSH DS
		    MOV AX,0
		    MOV DX,40H
		    MOV DS,DX
		    MOV DX,WORD PTR DS:[1CH]
		    MOV BX,WORD PTR DS:[1AH]
		    CMP DX,BX
		    JZ GETOUT
		    MOV AX,[BX]
		    MOV DS:[1AH],DX
GETOUT:             CMP AL,27
		    JE QUIT

		    POP DS
		    POP DX
		    POP BX
		    RET

GETAX ENDP

;-------------------------------------------------------------------

EXIT PROC NEAR
		MOV AH,4CH
                INT 21H
EXIT ENDP

		;----------------------------------------------
		; EXT:
		; INPUTS:
		; [SI] SOURCE OF EXTENSION
		; [DI] DESTINATION OF EXTENSION
		;-----------------------------------------------

EXT PROC NEAR
		PUSHA
		MOV CX,6
EXT_:	       	MOV AL,[SI]
		MOV [DI],AL
		INC SI
		INC DI
		LOOP EXT_
		POPA
		RET
EXT ENDP

	       ; --------------------------------------------------
	       ; WBUT
	       ; INPUTS:
	       ; NO INPUTS
	       ; OUTPUTS:
	       ; BX: BUTTON ; CX: MOUSE X ; DX: MOUSE Y
	       ; --------------------------------------------------

WBUT PROC NEAR
	       PUSH AX
	       MOV AX,3
	       INT 33H
	       SHR CX,4
	       SHR DX,3
	       POP AX
	       RET
WBUT ENDP

		;-------------------------------------------------------

QUIT PROC NEAR

		MOV DX,DATA
		MOV DS,DX
		MOV SI,OFFSET OLD_VIDEO_MODE
		XOR AX,AX
		MOV AL,[SI]
		INT 10H
		XOR AL,AL
                JMP EXIT
QUIT ENDP

		;--------------------------------------------------------

SENDERRORMESSAGE PROC NEAR
		SET <DS>,DATA
		PUSH DX
		CALL ADJ_VIDEOMODE
		POP DX
		MOV AH,9
		INT 21H
                JMP EXIT

ADJ_VIDEOMODE:  SET <DS>,DATA
		MOV AH,0
		MOV BX,0
		MOV SI,OFFSET OLD_VIDEO_MODE
		MOV AL,[SI]
		INT 10H
		RET

SENDERRORMESSAGE ENDP

; NAME: LOADNEW
; TASK: LOAD A FILE LESS THAN A SEGMENT LARGE INTO A FIX MEMORY LOCATION.
; NOTE: THIS PROCEDURE IS USUALLY CALLED BY A MACRO PROCEDURE.
;       CETTE PROCÉDURE EST OFFERTE POUR UNE COMPATIBILITÉ.

LOADNEW PROC

	PUSH CX ; CX_
	PUSH BX ; DI_
        PUSH ES ; DSEG
	PUSH DX	; FILENAME
        PUSH 0	; IDCODE
	MOV BP,SP

	HOPENFORREAD WORD PTR [BP+2], WORD PTR [BP]
        HREADFILE WORD PTR[BP+4],WORD PTR[BP+6],WORD PTR[BP+8],WORD PTR[BP]
        HCLOSE WORD PTR [BP]

        ADD SP,10
        RET

LOADNEW ENDP


; NAME: LOADOLD
; TASK: CHARGE UN FICHIER DE DIMENSION INFÉRIEUR À 64KO DANS UN EMPLACEMENT
;	MÉMOIRE FIXE. LA PROCÉDURE AVANCE LE POINTEUR DE FICHIER DE
;	SEPT OCTETS AVANT D'AMORCÉ LA LECTURE.
; NOTE: IL S'AGIT D'UNE PROCÉDURE QUI LIT PRINCIPALEMENT DES VIEUX
;	FICHIERS EN FORMAT: MCG ET MSQ.

LOADOLD PROC

	PUSH CX ; CX_
	PUSH BX ; DI_
        PUSH ES ; DSEG
	PUSH DX	; FILENAME
        PUSH 0	; IDCODE
	MOV BP,SP

	HOPENFORREAD WORD PTR [BP+2], WORD PTR [BP]

        ; DÉPLACE LE POINTEUR DE FICHIER...
        MOV BX, WORD PTR [BP]	; CODE D'ACCÈS AU FICHIER
        MOV CX,0
        MOV DX,7
        MOV AL,1
        MOV AH,42H
        INT 21H
        JCERROR

        HREADFILE WORD PTR[BP+4],WORD PTR[BP+6],WORD PTR[BP+8],WORD PTR[BP]
        HCLOSE WORD PTR [BP]

        ADD SP,10
        RET

LOADOLD ENDP

CODE ENDS
END
