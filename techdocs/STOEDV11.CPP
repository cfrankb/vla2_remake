
/* PROGRAMME: STOEDV11.CPP (Statics Objs Editor V1.1)
   AUTEUR   : FRANCOIS BLANCHETTE
   BUT      : Permettre la construction de .STO */

#include <stdio.h>
#include <process.h>
#include <alloc.h>
#include <stdlib.h>
#include <string.h>
#include <dos.h>
#include <conio.h>

#define sto_task	0
#define sto_class	1
#define sto_ima		2

#define ImaLen 2
#define ImaHei 4
#define ImaFont 6

char far *Font[4];
char *ImsTable;
char StoData[1024][4]={0};
char *ImsNames;
int DataLenght;
char StoName[64];
char ImsName[64];
char STO[]=".STO\0";
char IMS[]=".IMS\0";
char Copyright[]="\0\0Statics Objs Librairies (C) 1995 Francois Blanchette";
char ASCII_TABLE[]=" abcdefghijklmnopqrstuvwxz@ABCDEFGHIJKLMNOPQRSTUVWXYZ!#$%&*().!,/?:;+-{}[]\|`_<>@1234567890\0";

char Letters[91][64]= {  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x0F,
				  0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,
				  0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,
				  0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,
				  0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x0F,0x0F,0x0F,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x0F,
				  0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,
				  0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,
				  0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,
				  0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x0F,
				  0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x0F,
				  0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,
				  0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x0F,
				  0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,
				  0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x0F,
				  0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,
				  0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,
				  0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,
				  0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x00,0x00,
				  0x0F,0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,
				  0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x0F,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,
				  0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,
				  0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,
				  0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,
				  0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,
				  0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,
				  0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x0F,
				  0x0F,0x00,0x0F,0x00,0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x0F,
				  0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,
				  0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x0F,
				  0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,
				  0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x0F,0x0F,0x0F,0x00,0x00,0x00,
				  0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,
				  0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x0F,
				  0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x0F,
				  0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,
				  0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,
				  0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x0F,0x0F,0x0F,0x00,0x00,0x00,
				  0x0F,0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,
				  0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x0F,
				  0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,
				  0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x0F,0x0F,0x00,0x0F,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,
				  0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,
				  0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,
				  0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,
				  0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x0F,0x0F,0x00,0x0F,
				  0x0F,0x00,0x0F,0x00,0x0F,0x0F,0x00,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x0F,
				  0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,
				  0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,
				  0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,
				  0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,
				  0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,
				  0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x0F,
				  0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,
				  0x0F,0x0F,0x00,0x00,0x0F,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,
				  0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,
				  0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x0F,
				  0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,
				  0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,
				  0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,
				  0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,
				  0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,
				  0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
				  0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,
				  0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,
				  0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,
				  0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,
				  0x0F,0x0F,0x00,0x00,0x00,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x0F,0x00,0x00,0x00,0x00,
				  0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x0F,0x00,0x00,0x00,0x00,
				  0x0F,0x0F,0x00,0x00,0x00,0x0F,0x00,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,
				  0x0F,0x0F,0x00,0x00,0x00,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x0F,0x00,0x00,0x00,0x00,
				  0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x0F,0x00,0x00,0x00,0x00,
				  0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,
				  0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,
				  0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x0F,0x00,0x00,
				  0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,
				  0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,
				  0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,
				  0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,
				  0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x00,
				  0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,
				  0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,
				  0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x00,0x00,
				  0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x00,0x00,
				  0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x0F,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,
				  0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,
				  0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x0F,0x00,0x00,
				  0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x0F,0x0F,0x00,0x0F,
				  0x0F,0x0F,0x00,0x0F,0x0F,0x0F,0x00,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x0F,
				  0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x0F,0x00,0x0F,0x0F,0x00,0x0F,
				  0x0F,0x00,0x00,0x00,0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x0F,0x0F,0x00,0x0F,
				  0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x0F,
				  0x0F,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x0F,0x00,0x0F,
				  0x0F,0x00,0x00,0x00,0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,
				  0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x0F,0x0F,0x00,0x0F,
				  0x0F,0x00,0x00,0x00,0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,
				  0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,
				  0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,
				  0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,
				  0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x0F,
				  0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,
				  0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x0F,0x0F,0x0F,0x00,0x00,0x00,
				  0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,
				  0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,
				  0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x00,0x00,
				  0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x0F,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x0F,
				  0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,
				  0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x00,0x00,0x0F,
				  0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x0F,
				  0x00,0x0F,0x0F,0x00,0x0F,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,
				  0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,
				  0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,
				  0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,
				  0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,
				  0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,
				  0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x0F,0x0F,0x00,0x0F,
				  0x0F,0x00,0x00,0x00,0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x00,0x00,0x0F,0x0F,0x00,0x0F,
				  0x0F,0x00,0x0F,0x00,0x0F,0x0F,0x00,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x0F,
				  0x0F,0x0F,0x00,0x0F,0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x0F,0x0F,0x00,0x0F ,
				  0x0F,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x00,0x00,
				  0x00,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,
				  0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,
				  0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,
				  0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x0F,
				  0x0F,0x00,0x00,0x00,0x0F,0x0F,0x00,0x0F,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,
				  0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x00,0x00,
				  0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,
				  0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,
				  0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x00,0x00,
				  0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,
				  0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,
				  0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x00,0x00,0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,
				  0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
				  0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F ,
				  0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00 ,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F ,
				  0x0F,0x00,0x00,0x00,0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00 ,
				  0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00 ,
				  0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00 ,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00 ,
				  0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00 ,
				  0x0F,0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x0F,0x0F,0x0F,0x00,0x00,0x0F ,
				  0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x00 ,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 ,
				  0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x0F ,
				  0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00  ,
				  0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00  ,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00   ,
				  0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00    ,
				  0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00     ,
				  0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00 ,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00  ,
				  0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00   ,
				  0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00    ,
				  0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00 ,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00  ,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00  ,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00   ,
				  0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00    ,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00     ,
				  0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,
				  0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00 ,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00  ,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00   ,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00    ,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00     ,
				  0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,
				  0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00 ,
				  0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00  ,
				  0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x0F   ,
				  0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00    ,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x0F     ,
				  0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,
				  0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00 ,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00  ,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00   ,
				  0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00    ,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00     ,
				  0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 ,
				  0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00  ,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00   ,
				  0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00    ,
				  0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00     ,
				  0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x0F,
				  0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00 ,
				  0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00  ,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00   ,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F    ,
				  0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00     ,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x00,0x00,0x00 ,
				  0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x0F  ,
				  0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00   ,
				  0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x00,0x00,0x00     ,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00 ,
				  0x00,0x00,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00  ,
				  0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00   ,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00    ,
				  0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00     ,
				  0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,
				  0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00 ,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00  ,
				  0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00   ,
				  0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00     ,
				  0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00 ,
				  0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00  ,
				  0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00   ,
				  0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x00,0x00    ,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00     ,
				  0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00      ,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00 ,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00  ,
				  0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00   ,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00    ,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00     ,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x0F      ,
				  0x0F,0x00,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 ,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00  ,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00   ,
				  0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x0F    ,
				  0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00     ,
				  0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00      ,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00       ,
				  0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00        ,
				  0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,
				  0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00 ,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00  ,
				  0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00   ,
				  0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00    ,
				  0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00     ,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x0F      ,
				  0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00       ,
				  0x00,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x0F        ,
				  0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00         ,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x0F          ,
				  0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00           ,
				  0x00,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F            ,
				  0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00             ,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x00,0x00,0x00              ,
				  0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x00,0x0F   ,
				  0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00   ,
				  0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x00   ,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x0F   ,
				  0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00             ,
				  0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F              ,
				  0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00               ,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00                ,
				  0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F                 ,
				  0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F                  ,
				  0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x0F,
				  0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00 ,
				  0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00  ,
				  0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00   ,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x0F    ,
				  0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00     ,
				  0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,
				  0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00 ,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x0F  ,
				  0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00   ,
				  0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00    ,
				  0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00     ,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x0F      ,
				  0x0F,0x00,0x00,0x00,0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x0F,0x00,0x0F       ,
				  0x0F,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x0F        ,
				  0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00         ,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x0F          ,
				  0x0F,0x00,0x00,0x00,0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x0F,0x00,0x0F           ,
				  0x0F,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x0F,0x0F,0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x0F            ,
				  0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x00,0x00,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00             ,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00};

FILE *StoFile;
FILE *ImsFile;

/* Cette fonction permet de changer de mode video*/
void setmode(char Mode)
{

	asm {   push ds /* Indispensable  PUSH DS, PUSHA*/
			pusha
			mov ah,0
			mov al,Mode
			int 0x10

			mov ah,0xf
			int 0x10

			popa
			pop ds /* Indispensable POPA, POP DS */
		}
}



void SetXY(char x,char y)
{
 asm{			mov bh,0
				mov dl,x
				mov dh,y
				mov ah,2
				int 0x10
	}
}



void EcrireCar(char Car, char Color)
{
asm{            mov al,Car
				mov bl,Color
				mov ah,0x0e
				int 0x10
	}
}



void EcrireCar80(int where, char car, char color)
{
	int Cpt =0;
	while ((ASCII_TABLE[Cpt] != car) && (ASCII_TABLE[Cpt]!=0))
		Cpt++;

	char *source = Letters[Cpt];
	int col, lig;

	for (lig=0; lig<8; lig++)
	{
		for (col=0; col<4; col++)
		{
			asm { 	pusha
					push ds
					push es

					lds si,source
					mov dx,0xa000
					mov es,dx
					mov di,where
					mov al,[si]
					and al,color
					mov es:[di],al

					pop es
					pop ds
					popa
				}
			source++;
			source++;
			where++;

		}
		where = where + 0x140 -4;
	}
}


void WriteToScreen(int x,int y, char *Text)
{
	char car;
	while (*Text)
	{
		SetXY(x++,y);
		car = *Text;
		EcrireCar(car,15);
		Text++;
	}
}



int WriteToScreen80(int x, int y, char *Text)
{
	char car;
	int where= (x*4+y*0x0a00);
	while ((*Text!=13) && (x<79) && (*Text!=0))
	{
		car = *Text;
		EcrireCar80(where,car,14);
		where=where+4;
		Text++;
		x++;
	}
	return(x);
}



/* Find how many statics images are existing in the librairy.*/
int FindLastIma()
{
	int Cpt=0;
	int LastIma=0;

	while (*(ImsTable+Cpt) | *(ImsTable+1+Cpt) )
	{
		Cpt= *(ImsTable+Cpt) + *(ImsTable+Cpt+1)*256;
		LastIma++;
	}
	return(LastIma);
}

/* Get info from current STO defs*/
void getinfo(int ThisSto,char *_Task, char *_Class,int *_Ima)
{
	*_Task 	= 	StoData[ThisSto][sto_task];
	*_Class = 	StoData[ThisSto][sto_class];
	*_Ima   =  	StoData[ThisSto][sto_ima] +
				StoData[ThisSto][sto_ima+1]*256;
}



/* Ecris le nom de l'image ... */
void WriteImaName(int x,int y,int ima)
{
	int Cpt;
	char *PtrName;
	PtrName = ImsNames;

	for (Cpt=ima; Cpt>0; Cpt--)
	{
		while (*PtrName!=13)
			PtrName++;
		PtrName++;
	}
	WriteToScreen80(x,y,PtrName);
}



/*FrameExtender */
void FrameExtender(char *dest, char source)
{

	if (source %16 <10)
		*(dest+1) = (source %16)+48;
	else
		*(dest+1) = (source %16)+65 -10;

	if (source /16 <10)
		*(dest+0) = (source /16)+48;
	else
		*(dest+0) = (source /16)+65 -10;

}

void wipeline(int y)
{
	int dest= y*0xa00;
	asm{
			pusha
			push es
			mov dx,0xa000
			mov es,dx
			mov di,dest
			mov cx,0xa00/2
			xor ax,ax
		}
	L1:
	asm{	mov es:[di],ax
			add di,2
			loop L1
			pop es
			popa
		}
}



int getax()
{
	int key=0;
	asm{
			push bx
			push dx
			push ds
			mov ax,0
			mov dx,0x40
			mov ds,dx
			mov dx,word ptr ds:[0x1c]
			mov bx,word ptr ds:[0x1a]
			cmp dx,bx
			jz GETOUT
			mov ax,[bx]
			mov ds:[0x1a],dx
			mov &key,ax
		}
GETOUT:
	asm{
			pop ds
			pop dx
			pop bx
		}
	return(key);
}


void DrawIma(int Ima)
{
	int Offset=0;
	int Cpt;

	for (Cpt=0; Cpt<Ima; Cpt++)
	Offset= *(ImsTable+Offset) + *(ImsTable+Offset+1)*256;

	int len= *(ImsTable+Offset+ImaLen);
	int hei= *(ImsTable+Offset+ImaHei);
	char *NoFntPtr= ImsTable+ ImaFont+ Offset;

	for (int y=0; y<hei; y++)
		for (int x=0; x<len; x++)
			{
				int Target= (x*8+ y*0xa00);
				char far *Source;
				int thisFnt= *NoFntPtr+ *(NoFntPtr+1)*256;
		 /*		int AddSeg= (thisFnt/1024)*65536/16;*/

				Source = (Font[(thisFnt/1024)+1]+ 64*(thisFnt%1024));
				if ((thisFnt/1024)!=0)
					Source--;
				NoFntPtr= NoFntPtr+2;

				asm {	push ds
						push es
						pusha
						lds si,Source
						/*push ds
						pop dx
						add dx, AddSeg
						mov ds,dx*/

						mov dx,0xa000
						mov es,dx
						mov di,Target
						mov dx,8}
L2:
				asm {
						mov cx,4
					}

L1:				asm {
						mov ax,[si]
						mov es:[di],ax
						inc si
						inc si
						inc di
						inc di
						loop L1

						add di,0x140-8
						mov cx,dx
						dec dx
						loop L2

						popa
						pop es
						pop ds
					}
			}
}

void DelIma(int Ima)
{

	int Offset=0;
	int Cpt;

	for (Cpt=0; Cpt<Ima; Cpt++)
	Offset= *(ImsTable+Offset) + *(ImsTable+Offset+1)*256;

	int len= *(ImsTable+Offset+ImaLen);
	int hei= *(ImsTable+Offset+ImaHei);

	int LineSize=(len*8)/2;
	int addon= 0x140- LineSize*2;
	int ColSize=(hei*8);

	asm {
			push es
			pusha

			mov dx,0xa000
			mov es,dx
			mov di,0

			xor ax,ax
			mov dx,ColSize
		}

L2:
	asm {  mov cx,LineSize
		}
L1:
	asm {
			mov es:[di],ax
			inc di
			inc di
			loop L1

			add di,addon
			mov cx,dx
			dec dx
			loop L2

			popa
			pop es
		}
}



/* Do the STOEDIT...*/
void StoEditor()
{              	     	  /*0000000000111111111122222222223333333333*/
						  /*0123456789012345678901234567890123456789*/
		int x,y;
		int longcar;
		char car;
		char ObjNo_TXT   []="OBJ NO   : 0000                     B/N\0";
		char ObjClass_TXT[]="OBJ CLASS: 00                       </>\0";
		char ObjTask_TXT []="OBJ TASK : 00                       C/V\0";
		char ImaName_TXT []=".IMA NAME:\0";
		char ObjNo		 []="0000\0";
		char ObjClass	 []="00\0"  ;
		char ObjTask	 []="00\0"  ;
		setmode(0x13);

		WriteToScreen (1,17,ObjNo_TXT);
		x = WriteToScreen80 (2,18, ImaName_TXT);
		WriteToScreen (1,20,ObjClass_TXT);
		WriteToScreen (1,23,ObjTask_TXT);
		int LastIma = FindLastIma();
		int LastSto = DataLenght/4;
		int ThisSto = LastSto;
		char _Task, _Class;
		int _Ima;

		getinfo(ThisSto, &_Task, &_Class, &_Ima);
		DrawIma(_Ima);
		WriteImaName(x,18, _Ima);
		FrameExtender(ObjClass, _Class);
		FrameExtender(ObjTask, _Task);
		FrameExtender(ObjNo, ThisSto/256);
		FrameExtender(ObjNo+2, ThisSto%256);

		WriteToScreen(12,17,ObjNo);
		WriteToScreen(12,20,ObjClass);
		WriteToScreen(12,23,ObjTask);

		longcar= getax();
		car = longcar;

		while (car!=9)
		{

			switch (car)
			{
				case 'z':
				case 'Z':
					if (_Ima !=0)
						{
						DelIma(_Ima);
						_Ima--;
						wipeline(18);
						x = WriteToScreen80 (2,18, ImaName_TXT);
						WriteImaName(x,18, _Ima);
						DrawIma(_Ima);
						}
				break;

				case 'x':
				case 'X':
					if ((_Ima+1)!=LastIma)
						{
						DelIma(_Ima);
						_Ima++;
						wipeline(18);
						x = WriteToScreen80 (2,18, ImaName_TXT);
						WriteImaName(x,18, _Ima);
						DrawIma(_Ima);
						}
				break;

				case ',':
				case '<':
					if (_Class!=0)
						{
						_Class--;
						FrameExtender(ObjClass, _Class);
						WriteToScreen(12,20,ObjClass);
						}
				break;

				case '.':
				case '>':
					if (_Class!=0xff)
						{
						_Class++;
						FrameExtender(ObjClass, _Class);
						WriteToScreen(12,20,ObjClass);
						}
				break;

				case 'c':
				case 'C':
					if (_Task!=0)
					{
						_Task--;
						FrameExtender(ObjTask, _Task);
						WriteToScreen(12,23,ObjTask);
					}
				break;

				case 'v':
				case 'V':
					if (_Task!=0xff)
					{
						_Task++;
						FrameExtender(ObjTask, _Task);
						WriteToScreen(12,23,ObjTask);
					}
				break;


				case 'b':
				case 'B':
					if (ThisSto!=0)
					{
						DelIma(_Ima);
						ThisSto--;
						getinfo(ThisSto, &_Task, &_Class, &_Ima);
						DrawIma(_Ima);
						wipeline(18);
						x = WriteToScreen80 (2,18, ImaName_TXT);
						WriteImaName(x,18, _Ima);
						FrameExtender(ObjClass, _Class);
						FrameExtender(ObjTask, _Task);
						FrameExtender(ObjNo, ThisSto/256);
						FrameExtender(ObjNo+2, ThisSto%256);

						WriteToScreen(12,17,ObjNo);
						WriteToScreen(12,20,ObjClass);
						WriteToScreen(12,23,ObjTask);
					}
				break;

				case 'n':
				case 'N':
					if (ThisSto!=LastSto)
					{
						DelIma(_Ima);
						ThisSto++;
						getinfo(ThisSto, &_Task, &_Class, &_Ima);
						DrawIma(_Ima);
						wipeline(18);
						x = WriteToScreen80 (2,18, ImaName_TXT);
						WriteImaName(x,18, _Ima);
						FrameExtender(ObjClass, _Class);
						FrameExtender(ObjTask, _Task);
						FrameExtender(ObjNo, ThisSto/256);
						FrameExtender(ObjNo+2, ThisSto%256);

						WriteToScreen(12,17,ObjNo);
						WriteToScreen(12,20,ObjClass);
						WriteToScreen(12,23,ObjTask);
					}
				break;


				case 13:
					StoData[ThisSto][sto_task] 	= _Task;
					StoData[ThisSto][sto_class] = _Class;
					StoData[ThisSto][sto_ima] 	= _Ima%256;
					StoData[ThisSto][sto_ima+1]	= _Ima/256;
					if (ThisSto==LastSto)
					{
						ThisSto++;
						LastSto++;
						StoData[ThisSto][sto_task] 	= _Task;
						StoData[ThisSto][sto_class] 	= _Class;
						StoData[ThisSto][sto_ima] 	= _Ima%256;
						StoData[ThisSto][sto_ima+1]	= _Ima/256;
						FrameExtender(ObjNo, ThisSto/256);
						FrameExtender(ObjNo+2, ThisSto%256);

						WriteToScreen(12,17,ObjNo);
					}
				break;

				case '=':
				case '+':
				case '1':

					StoFile= fopen(StoName, "wb");
					if (StoFile)
					{
						int DataSize = LastSto *4;

						fwrite(&DataSize, 2,1, StoFile);
						fwrite(ImsName, 16, 1,  StoFile);
						fwrite(StoData, DataSize, 1, StoFile);
						fwrite(Copyright, 72-18, 1, StoFile);
						fclose(StoFile);
					}

					else
					{
						SetXY(0,16);
						printf("WARNING: Unable to rewrite %c%s%c.",34,StoName,34);
					}
				break;

				case 27:
					setmode(3);
					exit(0);
				break;

			}

			if (longcar/256 == 83)
			{
				if (ThisSto!=LastSto)
				{
					DelIma(_Ima);
					for (int sto=ThisSto; sto!=LastSto; sto++)
						for (int cpt=0; cpt !=4; cpt++)
							StoData[sto][cpt]= StoData[sto+1][cpt];

					LastSto--;
					getinfo(ThisSto, &_Task, &_Class, &_Ima);
					DrawIma(_Ima);
					wipeline(18);
					x = WriteToScreen80 (2,18, ImaName_TXT);
					WriteImaName(x,18, _Ima);
					FrameExtender(ObjClass, _Class);
					FrameExtender(ObjTask, _Task);
					FrameExtender(ObjNo, ThisSto/256);
					FrameExtender(ObjNo+2, ThisSto%256);

					WriteToScreen(12,17,ObjNo);
					WriteToScreen(12,20,ObjClass);
					WriteToScreen(12,23,ObjTask);

				}

				else
				{
					if (_Ima!=0)
					{
						DelIma(_Ima);
						_Ima=0;
						DrawIma(0);
						wipeline(18);
						x = WriteToScreen80 (2,18, ImaName_TXT);
						WriteImaName(x,18, _Ima);
					}
					_Task=0;
					_Class=0;
					FrameExtender(ObjClass, _Class);
					FrameExtender(ObjTask, _Task);
					FrameExtender(ObjNo, ThisSto/256);
					FrameExtender(ObjNo+2, ThisSto%256);

					WriteToScreen(12,17,ObjNo);
					WriteToScreen(12,20,ObjClass);
					WriteToScreen(12,23,ObjTask);
					}

			}

			if ((longcar/256 == 59) && (ThisSto!=0))
			{
				ThisSto=0;
				DelIma(_Ima);
				getinfo(ThisSto, &_Task, &_Class, &_Ima);
				DrawIma(_Ima);
				wipeline(18);
				x = WriteToScreen80 (2,18, ImaName_TXT);
				WriteImaName(x,18, _Ima);
				FrameExtender(ObjClass, _Class);
				FrameExtender(ObjTask, _Task);
				FrameExtender(ObjNo, ThisSto/256);
				FrameExtender(ObjNo+2, ThisSto%256);

				WriteToScreen(12,17,ObjNo);
				WriteToScreen(12,20,ObjClass);
				WriteToScreen(12,23,ObjTask);

			}

			if ((longcar/256 == 62) && (ThisSto!=LastSto))
			{
				ThisSto = LastSto;
				DelIma(_Ima);
				getinfo(ThisSto, &_Task, &_Class, &_Ima);
				DrawIma(_Ima);
				wipeline(18);
				x = WriteToScreen80 (2,18, ImaName_TXT);
				WriteImaName(x,18, _Ima);
				FrameExtender(ObjClass, _Class);
				FrameExtender(ObjTask, _Task);
				FrameExtender(ObjNo, ThisSto/256);
				FrameExtender(ObjNo+2, ThisSto%256);

				WriteToScreen(12,17,ObjNo);
				WriteToScreen(12,20,ObjClass);
				WriteToScreen(12,23,ObjTask);
			}
			longcar= getax();
			car = longcar;
		}
		setmode(3);
}



/* Cette fonction permet de charger en memoire un fichier .STO */
int LoadSto()
{
	printf("\nName of existing .STO:");
	fflush(stdin);
	gets(StoName);
	strcat(StoName, STO);

	StoFile = fopen(StoName, "rb");
	if (StoFile)
	{
		char Cecilia[2];
		fread(&DataLenght, 2,1,StoFile);
		fread(&ImsName, 16,1, StoFile);
		fread(StoData, DataLenght, 1, StoFile);
		fclose (StoFile);

		int Cpt;
		for (Cpt=0; Cpt <4; Cpt++)
			StoData[DataLenght/4][Cpt]=0;


		ImsFile = fopen(ImsName, "rb");
		if (ImsFile)
		{
			int NbFonts;
			int ImsLenght;

			fread(&NbFonts,2,1,ImsFile);
			fread(&ImsLenght, 2,1,ImsFile);

			fread(ImsTable, ImsLenght-4, 1, ImsFile);


			/*fread(Font, NbFonts, 64, ImsFile);*/
				int ThisSeg=1;
				while (NbFonts > 1023)
				{
				fread(Font[ThisSeg], 65536,1, ImsFile);
				NbFonts = NbFonts - 1024;
				ThisSeg++;
				}

				if (NbFonts>0)
					fread(Font[ThisSeg], NbFonts*64, 1, ImsFile);



			fread(Cecilia, 2, 1, ImsFile); /* Bidon */
			fread(ImsNames, 8192, 1, ImsFile);
			fclose(ImsFile);
			StoEditor();

		}
		else
		{
			printf("\nWARNING: unable to load parent %c%s%c.\n",34,ImsName,34);
			return(2);
		}
		return(0);
	}

	else
	{
		printf("\nWARNING: unable to load %c%s%c.\n", 34,StoName,34);
		return(1);
	}
}


/* Cette fonction permet la creation d'un fichier .STO */
int CreatSto()
{
	char Cecilia[2];
	printf("\nName of new .STO file:");
	fflush(stdin);
	gets(StoName);
	strcat(StoName, STO);

	printf("Name .IMS parent file:");
	fflush(stdin);
	gets(ImsName);
	strcat(ImsName, IMS);

	StoFile = fopen(StoName, "wb");
	if (StoFile)
	{

		DataLenght=0;

		int Cpt;
		for (Cpt=0; Cpt <4; Cpt++)
			StoData[DataLenght/4][Cpt]=0;

		fwrite(&DataLenght, 2,1,StoFile);
		fwrite(&ImsName, 16,1, StoFile);
		fwrite(&Copyright, 72-18,1,StoFile);
		fclose(StoFile);

		ImsFile = fopen(ImsName, "rb");
		if (ImsFile)
		{
			int NbFonts;
			int ImsLenght;

			fread(&NbFonts,2,1,ImsFile);
			fread(&ImsLenght, 2,1,ImsFile);

			fread(ImsTable, ImsLenght-4, 1, ImsFile);
			/*fread(Font, NbFonts, 64, ImsFile);*/
				int ThisSeg=1;
				while (NbFonts > 1023)
				{
				fread(Font[ThisSeg], 65536,1, ImsFile);
				NbFonts = NbFonts - 1024;
				ThisSeg++;
				}

				if (NbFonts>0)
					fread(Font[ThisSeg], NbFonts*64, 1, ImsFile);


			fread(Cecilia, 2, 1, ImsFile); /* Bidon */
			fread(ImsNames, 8192, 1, ImsFile);
			fclose(ImsFile);
			StoEditor();
		}
		else
		{
			printf("\nWARNING: unable to load parent %c%s%c.\n",34,ImsName,34);
			return(2);
		}
		return(0);
	}

	else
	{
		printf("\nWARNING: unable to creat %c%s%c.\n", 34,StoName,34);
		return(1);
	}
}



/* Programme principal */
void main(int Nb, char *args[])
{
	char choix;
	for (int NbSeg=1; NbSeg<4; NbSeg++)
	{
		Font[NbSeg] = (char far *) farmalloc(65535);
		if (Font[NbSeg]==NULL)
		   {
		   puts("Insuficient memory to run program.");
		   exit(-1);
		   }
	}

	if ((ImsTable = (char *) malloc(32768)) == NULL)
	   {
	   puts("Insuficient memory to run program.");
	   exit(-1);
	   }

	if ((ImsNames = (char *) malloc(8192)) == NULL)
	   {
	   puts("Insuficient memory to run program.");
	   exit(-1);
	   }

	if (Nb>1)
	{
		strcpy(StoName, args[1]);
		StoFile = fopen(StoName, "rb");
		if (StoFile)
		{

			fread(&DataLenght, 2,1,StoFile);
			fread(&ImsName, 16,1, StoFile);
			fread(StoData, DataLenght, 1, StoFile);
			fclose (StoFile);

			int Cpt;
			for (Cpt=0; Cpt <4; Cpt++)
				StoData[DataLenght/4][Cpt]=0;


			ImsFile = fopen(ImsName, "rb");
			if (ImsFile)
			{
				int NbFonts;
				int ImsLenght;

				fread(&NbFonts,2,1,ImsFile);
				fread(&ImsLenght, 2,1,ImsFile);

				fread(ImsTable, ImsLenght-4, 1, ImsFile);

				int ThisSeg=1;
				while (NbFonts >= 1024)
				{
					fread(Font[ThisSeg], 1024,64, ImsFile);
					NbFonts = NbFonts - 1024;
					ThisSeg++;
				}

				if (NbFonts>0)
					fread(Font[ThisSeg], NbFonts, 64, ImsFile);

				fread(ImsNames, 8192, 1, ImsFile);
				fclose(ImsFile);
				StoEditor();

			}
			else
				printf("\nWARNING: unable to load parent %c%s%c.\n",34,ImsName,34);
		}
		else
			printf("\nWARNING: unable to load %c%s%c.\n", 34,StoName,34);

	}

	puts("\nStatics Objs Editor V1.1\nby Francois Blanchette");
	puts("\nPlease select an option:\n\nC. Creat a new .STO\nL. Load an existing .STO");

	fflush(stdin);
	choix=getax();
	fflush(stdin);

	while ((choix != 'l') && (choix !='c') && (choix !=27))
	{
		fflush(stdin);
		choix= getax();
	}

	while (choix !=27)
	{
		if (choix == 'l')
			LoadSto();
		if (choix == 'c')
			CreatSto();

		puts("\nStatics Objs Editor V1.1\nby Francois Blanchette");
		puts("\nPlease select an option:\n\nC. Creat a new .STO\nL. Load an existing .STO");

		fflush(stdin);
		choix=getax();
		while ((choix != 'l') && (choix !='c') && (choix !=27))
		{
			fflush(stdin);
			choix= getax();
		}
	}
}

